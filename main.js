(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\nbody {\n  position: relative;\n}\n\n.content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgb(149, 247, 247);\n}\n\n.container {\n  height: 80vh;\n  width: 80vw;\n  background-color: #eeeeee;\n  box-shadow: 11px 12px 20px 7px rgba(0, 0, 0, 0.3);\n  display: grid;\n  grid-template-rows: 1fr 7fr;\n  grid-template-columns: 1fr 5fr;\n}\n\n.is-blurred {\n  filter: blur(4px);\n}\n\n.header {\n  grid-column: 1 / -1;\n  text-align: center;\n  background-color: rosybrown;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  font-size: 3rem;\n  color: #f4f4f4;\n}\n\n.menu {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 300px;\n  align-items: center;\n  background-color: #ddd;\n  padding-top: 50px;\n}\n\n.new-btn,\n.submit-btn {\n  border: none;\n  background-color: rosybrown;\n  padding: 15px 40px;\n  font-size: 1.5rem;\n  color: #eee;\n  font-weight: bold;\n  cursor: pointer;\n  margin-bottom: 75px;\n  border-radius: 15px;\n}\n\n.new-btn:hover,\n.submit-btn:hover {\n  transform: scale(1.02);\n}\n\n.new-btn:active,\n.submit-btn:active {\n  transform: scale(0.98);\n}\n\nul {\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nli {\n  list-style: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n\n.active {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\nli:hover {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\n.task-container {\n  display: grid;\n  grid-template-rows: repeat(auto-fill, minmax(50px, 1fr));\n  gap: 15px;\n  padding: 50px;\n}\n\n.task {\n  background-color: #ddd;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  transition: all 0.1s ease-in;\n  border-radius: 2px;\n}\n\n.task:hover {\n  box-shadow: 6px 6px 10px 3px rgba(0, 0, 0, 0.1);\n  transform: scale(1.01);\n}\n\n.task-left {\n  display: flex;\n  gap: 10px;\n}\n\n.task-right {\n  display: flex;\n  gap: 20px;\n}\n\n.add-item {\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  top: 20%;\n  width: 275px;\n  height: 450px;\n  padding: 30px;\n  border: solid black 2px;\n  border-radius: 10px;\n  background-color: #eeeeee;\n  box-shadow: 0px 5px 20px 8px rgba(0, 0, 0, 0.2);\n}\n\n.new-item-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-input {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.input-text {\n  width: 200px;\n  height: 25px;\n}\n\n.type-selector {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n\n.type-select:hover {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\n.task-form,\n.project-form,\n.note-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.high {\n  border-left: solid 4px red;\n}\n.medium {\n  border-left: solid 4px orange;\n}\n.low {\n  border-left: solid 4px yellow;\n}\n\n.done {\n  border-left: solid 4px green;\n}\n\n.task-edit,\n.task-delete {\n  height: 20px;\n  width: 20px;\n  cursor: pointer;\n}\n\n.notes-container {\n  padding: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n}\n\n.notes-item {\n  width: 200px;\n  height: fit-content;\n  background-color: #ddd;\n  padding: 10px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 15px;\n  transition: all 0.1s ease-out;\n}\n\n.notes-item:hover {\n  box-shadow: 6px 6px 10px 3px rgba(0, 0, 0, 0.1);\n  transform: scale(1.01);\n}\n\n.note-title {\n  font-size: 1.3rem;\n}\n\n.note-details {\n  grid-column: span 2;\n}\n\n.render-container {\n  overflow-y: scroll;\n}\n\n.note-delete-btn {\n  height: 20px;\n  justify-self: end;\n  cursor: pointer;\n}\n\n.hidden {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,6EAA6E;AAC/E;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yBAAyB;EACzB,iDAAiD;EACjD,aAAa;EACb,2BAA2B;EAC3B,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,2BAA2B;EAC3B,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,UAAU;EACV,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,kBAAkB;EAClB,iBAAiB;EACjB,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;;EAEE,sBAAsB;AACxB;;AAEA;;EAEE,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,2CAA2C;AAC7C;;AAEA;EACE,qBAAqB;EACrB,2CAA2C;AAC7C;;AAEA;EACE,aAAa;EACb,wDAAwD;EACxD,SAAS;EACT,aAAa;AACf;;AAEA;EACE,sBAAsB;EACtB,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;EACb,4BAA4B;EAC5B,kBAAkB;AACpB;;AAEA;EACE,+CAA+C;EAC/C,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,iBAAiB;EACjB,kBAAkB;EAClB,QAAQ;EACR,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,yBAAyB;EACzB,+CAA+C;AACjD;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,2CAA2C;AAC7C;;AAEA;;;EAGE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,0BAA0B;AAC5B;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,6BAA6B;AAC/B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,eAAe;EACf,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,mBAAmB;EACnB,sBAAsB;EACtB,aAAa;EACb,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,6BAA6B;AAC/B;;AAEA;EACE,+CAA+C;EAC/C,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\nbody {\n  position: relative;\n}\n\n.content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgb(149, 247, 247);\n}\n\n.container {\n  height: 80vh;\n  width: 80vw;\n  background-color: #eeeeee;\n  box-shadow: 11px 12px 20px 7px rgba(0, 0, 0, 0.3);\n  display: grid;\n  grid-template-rows: 1fr 7fr;\n  grid-template-columns: 1fr 5fr;\n}\n\n.is-blurred {\n  filter: blur(4px);\n}\n\n.header {\n  grid-column: 1 / -1;\n  text-align: center;\n  background-color: rosybrown;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  font-size: 3rem;\n  color: #f4f4f4;\n}\n\n.menu {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 300px;\n  align-items: center;\n  background-color: #ddd;\n  padding-top: 50px;\n}\n\n.new-btn,\n.submit-btn {\n  border: none;\n  background-color: rosybrown;\n  padding: 15px 40px;\n  font-size: 1.5rem;\n  color: #eee;\n  font-weight: bold;\n  cursor: pointer;\n  margin-bottom: 75px;\n  border-radius: 15px;\n}\n\n.new-btn:hover,\n.submit-btn:hover {\n  transform: scale(1.02);\n}\n\n.new-btn:active,\n.submit-btn:active {\n  transform: scale(0.98);\n}\n\nul {\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nli {\n  list-style: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n\n.active {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\nli:hover {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\n.task-container {\n  display: grid;\n  grid-template-rows: repeat(auto-fill, minmax(50px, 1fr));\n  gap: 15px;\n  padding: 50px;\n}\n\n.task {\n  background-color: #ddd;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  transition: all 0.1s ease-in;\n  border-radius: 2px;\n}\n\n.task:hover {\n  box-shadow: 6px 6px 10px 3px rgba(0, 0, 0, 0.1);\n  transform: scale(1.01);\n}\n\n.task-left {\n  display: flex;\n  gap: 10px;\n}\n\n.task-right {\n  display: flex;\n  gap: 20px;\n}\n\n.add-item {\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  top: 20%;\n  width: 275px;\n  height: 450px;\n  padding: 30px;\n  border: solid black 2px;\n  border-radius: 10px;\n  background-color: #eeeeee;\n  box-shadow: 0px 5px 20px 8px rgba(0, 0, 0, 0.2);\n}\n\n.new-item-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-input {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.input-text {\n  width: 200px;\n  height: 25px;\n}\n\n.type-selector {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n\n.type-select:hover {\n  transform: scale(1.1);\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n}\n\n.task-form,\n.project-form,\n.note-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.high {\n  border-left: solid 4px red;\n}\n.medium {\n  border-left: solid 4px orange;\n}\n.low {\n  border-left: solid 4px yellow;\n}\n\n.done {\n  border-left: solid 4px green;\n}\n\n.task-edit,\n.task-delete {\n  height: 20px;\n  width: 20px;\n  cursor: pointer;\n}\n\n.notes-container {\n  padding: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n}\n\n.notes-item {\n  width: 200px;\n  height: fit-content;\n  background-color: #ddd;\n  padding: 10px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 15px;\n  transition: all 0.1s ease-out;\n}\n\n.notes-item:hover {\n  box-shadow: 6px 6px 10px 3px rgba(0, 0, 0, 0.1);\n  transform: scale(1.01);\n}\n\n.note-title {\n  font-size: 1.3rem;\n}\n\n.note-details {\n  grid-column: span 2;\n}\n\n.render-container {\n  overflow-y: scroll;\n}\n\n.note-delete-btn {\n  height: 20px;\n  justify-self: end;\n  cursor: pointer;\n}\n\n.hidden {\n  display: none;\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=a(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}o.push(d)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var A=r(n,a),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),o=t.n(i),s=t(565),A=t.n(s),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=A(),f.insert=o().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const m=t.p+"8d317290131028fe10cf.svg",E=t.p+"bde675c38d54979f589e.svg",C=document.querySelector(".new-btn"),x=document.querySelector(".task-container"),h=document.querySelector(".content"),B=document.querySelector(".add-item"),g=document.querySelector(".task-form"),b=document.querySelector(".note-form"),v=document.querySelector(".project-form"),y=document.querySelector(".task-select"),w=document.querySelector(".note-select"),k=document.querySelector(".project-select"),L=document.querySelectorAll(".menu-item"),S=document.querySelector(".submit-btn"),j=document.querySelector(".task-title-input"),q=document.querySelector(".due-date-input"),T=document.querySelector(".task-priority-input"),Y=document.querySelector(".task-project-input"),M=(document.querySelector(".menu-list"),document.querySelector(".project-name-input")),$=document.querySelector(".notes-menu"),Z=document.querySelector(".notes-container"),z=document.querySelector(".note-title-input"),H=document.querySelector(".note-details-input"),X=[{title:"Go to the gym",date:"2023-03-22",project:"exercise",priority:"high"},{title:"call Mum",date:"2023-03-22",project:"family",priority:"medium"},{title:"Annie's birthday",date:"2023-03-22",project:"friends",priority:"high"},{title:"Complete Insurance paperwork",date:"2023-03-22",project:"work",priority:"low"},{title:"Hang picture",date:"2023-03-22",project:"home",priority:"medium"}],D=[{title:"need bread",details:"Need to get bread before Tuesday"}];class I{constructor(n,e,t,r){this.title=n,this.date=e,this.priority=t,this.project=r}}class U{constructor(n,e){this.title=n,this.details=e}}function W(n,e,t){const r=document.createElement("div"),a=e.split("-"),i=`${a[2]}/${a[1]}/${a[0].slice(-2)}`;r.classList.add("task"),r.classList.add(`${t}`),r.innerHTML=` \n  <div class="task-left">\n    <input type="checkbox" class="checkbox" />\n    <span class="task-name"\n    >${n}</span\n  >\n  </div>\n  <div class="task-right">\n    <span class="task-date">${i}</span>\n    <span class="task-edit"><img src="${m}" alt="edit-icon"></span>\n    <span class="task-delete"><img src="${E}" alt="edit-icon" class="delete-btn"></span>\n  </div>`,x.appendChild(r)}function N(n,e){const t=document.createElement("div");t.classList.add("notes-item"),t.innerHTML=`<span class="note-title">${n}</span>\n  <img src="${E}" alt="edit-icon" class="note-delete-btn">\n  <span class="note-details">${e}</span>`,Z.appendChild(t)}function O(n){n.forEach((n=>{W(n.title,n.date,n.priority)}))}function R(){h.classList.remove("is-blurred"),B.classList.add("hidden")}y.addEventListener("click",(()=>{g.classList.remove("hidden"),b.classList.add("hidden"),v.classList.add("hidden"),y.classList.add("active"),w.classList.remove("active"),k.classList.remove("active")})),k.addEventListener("click",(()=>{v.classList.remove("hidden"),g.classList.add("hidden"),b.classList.add("hidden"),k.classList.add("active"),w.classList.remove("active"),y.classList.remove("active")})),w.addEventListener("click",(()=>{b.classList.remove("hidden"),g.classList.add("hidden"),v.classList.add("hidden"),w.classList.add("active"),y.classList.remove("active"),k.classList.remove("active")})),S.addEventListener("click",(()=>{if(y.classList.contains("active")){let n=new I(j.value,q.value,T.value,Y.value);X.push(n),W(j.value,q.value,T.value),R()}if(k.classList.contains("active")&&(function(n){const e=document.createElement("li"),t=document.createElement("option");e.classList.add("menu-item"),e.dataset.project=`${n.toLowerCase()}`,e.textContent=`${n}`,t.value=`${n.toLowerCase()}`,t.textContent=`${n}`,$.before(e),Y.appendChild(t);const r=document.querySelectorAll(".menu-item");r.forEach((n=>{n.addEventListener("click",(e=>{r.forEach((n=>n.classList.remove("active"))),e.target.classList.add("active");const t=n.dataset.project;if("all"===t)x.innerHTML="",O(X);else{const n=X.filter((n=>n.project===t));x.innerHTML="",O(n)}}))}))}(M.value),R()),w.classList.contains("active")){let n=new U(z.value,H.value);D.push(n),console.log(D),N(z.value,H.value),R()}})),C.addEventListener("click",(function(){h.classList.add("is-blurred"),B.classList.remove("hidden"),j.value="",q.value="",Y.value="",T.value="High"})),h.addEventListener("click",(n=>{B.classList.contains("hidden")||n.target.classList.contains("new-btn")||R()})),L.forEach((n=>{n.addEventListener("click",(e=>{L.forEach((n=>n.classList.remove("active"))),e.target.classList.add("active");const t=n.dataset.project;if("all"===t)x.innerHTML="",O(X),Z.classList.add("hidden"),x.classList.remove("hidden");else if("notes"===t)Z.classList.remove("hidden"),x.classList.add("hidden");else{const n=X.filter((n=>n.project===t));x.innerHTML="",O(n),Z.classList.add("hidden"),x.classList.remove("hidden")}}))})),window.addEventListener("click",(n=>{const e=n.target.closest(".task");n.target.classList.contains("checkbox")&&(e.classList.contains("done")?e.classList.remove("done"):e.classList.add("done")),n.target.classList.contains("delete-btn")&&e.remove(),n.target.classList.contains("note-delete-btn")&&n.target.closest(".notes-item").remove()})),O(X),D.forEach((n=>{N(n.title,n.details)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,